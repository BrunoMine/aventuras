API para mod Aventuras 0.2.1


### Métodos Básicos
* `aventuras.registrar_aventura(nome, Definições de aventura)` : Registrar uma aventura
	* `nome` é o nome da aventura (exemplo: "nome_mod:grande_desbravador")
* `aventuras.adicionar_tarefa(aventura, tipo, Definições de tarefa)` : Adicionar uma tarefa em uma aventura
	* `aventura` é o nome da aventura (exemplo: "nome_mod:grande_desbravador")
	* `tipo` é o nome da aventura (exemplo: "simples")
* `aventuras.pegar_tarefa(nome, aventura)` : Retorna o número da última tarefa realizada (retorna `0` caso não tenha feito nenhuma)
	* `nome` é o nome do jogador
	* `aventura` é o nome da aventura
* `aventuras.salvar_tarefa(nome, aventura, tarefa)` : Salva a ultima tarefa realizada por um jogador
	* `nome` é o nome do jogador
	* `aventura` é o nome da aventura
	* `tarefa` é o numero da tarefa

### Métodos Comuns
* `aventuras.comum.verif_tarefa(aventura, tarefa)` : Verifica se uma tarefa existe
	* `aventura` é o nome da aventura
	* `tarefa` é o numero da tarefa

### Funções de registo de chamada global (callbacks)

* `aventuras.callbacks.registrar_ao_concluir(function(nome, aventura, tarefa))`
	* Chamada quando um jogador conclui uma tarefa


### Definições de aventura
	{
		titulo = "Grande Desbravador",
		^ Titulo da aventura
		desc = "Uma aventura legal",
		^ Pequena descrição da aventura
		img = "default_apple.png",
		^ OPCIONAL | Imagem (quadrada) que representa a aventura
	}

### Definições de tarefa
	{
		titulo = "Descobrindo o mundo",
		^ Titulo da tarefa
		dados = {},
		^ Tabela de dados que o referido tipo de tarefa designar
	}

### Dados `troca_npc` : Nessa tarefa o jogador deve realizar um troca com um ou mais npcs
	{
		aven_req = {["uma_aventura"]=2,["outra_aventura"]=10},
		^ Tabela de aventuras onde a index é o ID da aventura e armazena a tarefa mínima requerida.
		npcs = {"mobs_npc:igor", "mobs_npc:trader"},
		^ Tabela de entidades que estao aptas para realizar a troca
		item_rem = Tabela de Itens,
		^ OPCIONAL | Tabela de itens exigidos para a troca (limite de 5 itens na tabela)
		item_add = Tabela de Itens,
		^ OPCIONAL | Tabela de itens recebidos pela troca (limite de 5 itens na tabela)
		msg = "",
		^ Mensagem apresentada ao pedir os itens
		msg_fim = "",
		^ Mensagem apresentada ao entregar os itens (termino da tarefa)
	}
	
### Dados `info_npc` : Nessa tarefa o jogador apenas precisa acessar o npc e clicar em concluir
	{
		aven_req = {["nome_mod:uma_aventura"]=2,["nome_mod:outra_aventura"]=10},
		^ Tabela de aventuras onde a index é o ID da aventura e armazena a tarefa mínima requerida.
		npcs = {"mobs_npc:igor", "mobs_npc:trader"},
		^ Tabela de entidades que estao aptas para realizar a tarefa
		msg = "",
		^ Mensagem apresentada ao acessar npc
		msg_fim = "",
		^ Mensagem apresentada ao concluir (termino da tarefa)
	}

### Dados `place_node` : Nessa tarefa o jogador precisa acessar um NPC e depois colocar um node para concluir
	{
		aven_req = {["nome_mod:uma_aventura"]=2,["nome_mod:outra_aventura"]=10},
		^ Tabela de aventuras onde a index é o ID da aventura e armazena a tarefa mínima requerida.
		npcs = {"mobs_npc:igor", "mobs_npc:trader"},
		^ Tabela de entidades que estao aptas para informar a tarefa (habilitar para ser realizada)
		msg = "",
		^ Mensagem apresentada ao acessar npc
		msg_fim = "",
		^ Mensagem apresentada ao concluir (uma pequena frase no chat)
		node = "default:cobble",
		^ Itemstring do node a ser colocado para concluir a tarefa
		img_node = "aventuras_tarefa_duvida.png",
		^ Opcional. Imagem para ser exibida ao acessar npc (caso esteja nula será exibido o item que precisa ser colocado)
	}

### Dados `dig_node` : Nessa tarefa o jogador precisa acessar um NPC e depois cavar um node para concluir
	{
		aven_req = {["nome_mod:uma_aventura"]=2,["nome_mod:outra_aventura"]=10},
		^ Tabela de aventuras onde a index é o ID da aventura e armazena a tarefa mínima requerida.
		npcs = {"mobs_npc:igor", "mobs_npc:trader"},
		^ Tabela de entidades que estao aptas para informar a tarefa (habilitar para ser realizada)
		msg = "",
		^ Mensagem apresentada ao acessar npc
		msg_fim = "",
		^ Mensagem apresentada ao concluir (uma pequena frase no chat)
		node = "default:cobble",
		^ Itemstring do node a ser cavado para concluir a tarefa
		img_node = "aventuras_tarefa_duvida.png",
		^ Opcional. Imagem para ser exibida ao acessar npc (caso esteja nula será exibido o item que precisa ser cavado)
	}

### Dados `craftar` : Nessa tarefa o jogador precisa acessar um NPC e depois craftar algo para concluir
	{
		aven_req = {["nome_mod:uma_aventura"]=2,["nome_mod:outra_aventura"]=10},
		^ Tabela de aventuras onde a index é o ID da aventura e armazena a tarefa mínima requerida.
		npcs = {"mobs_npc:igor", "mobs_npc:trader"},
		^ Tabela de entidades que estao aptas para informar a tarefa (habilitar para ser realizada)
		msg = "",
		^ Mensagem apresentada ao acessar npc
		msg_fim = "",
		^ Mensagem apresentada ao concluir (uma pequena frase no chat)
		item = "default:cobble",
		^ Itemstring do item a ser craftado para concluir a tarefa
		img_item = "aventuras_tarefa_duvida.png",
		^ Opcional. Imagem para ser exibida ao acessar npc (caso esteja nula será exibido o item que precisa ser craftado)
	}

### Dados `comer` : Nessa tarefa o jogador precisa acessar um NPC e depois comer algo para concluir
	{
		aven_req = {["nome_mod:uma_aventura"]=2,["nome_mod:outra_aventura"]=10},
		^ Tabela de aventuras onde a index é o ID da aventura e armazena a tarefa mínima requerida.
		npcs = {"mobs_npc:igor", "mobs_npc:trader"},
		^ Tabela de entidades que estao aptas para informar a tarefa (habilitar para ser realizada)
		msg = "",
		^ Mensagem apresentada ao acessar npc
		msg_fim = "",
		^ Mensagem apresentada ao concluir (uma pequena frase no chat)
		item = "default:apple",
		^ Itemstring do item a ser comido para concluir a tarefa
		img_item = "aventuras_tarefa_duvida.png",
		^ Opcional. Imagem para ser exibida ao acessar npc (caso esteja nula será exibido o item que precisa ser comido)
	}

### Tabela de Itens
	{
		{name="default:dirt", count=50, wear=0, metadata=""},
		{name="default:sand", count=5, wear=0, metadata=""},
		{name="default:cobble", count=1, wear=0, metadata=""},
	}

Recursos
--------

### NPCs
* `aventuras.recursos.npc.registrar(nome, aventura)` : Registrar o uso de um NPC na engine
	* `nome` é o nome da entidade-NPC (exemplo: "mobs_npc:igor")
	* `aventura` é o nome da aventura (exemplo: "nome_mod:grande_desbravador")
	* Executa a chamada `aventuras.tarefas["tipo de tarefa"].npcs.on_rightclick(npc_name, clicker, aventura, tarefa)` quando o npc é acessado e o jogador está na tarefa cujo registro possui `npcs.on_rightclick["nome da entidade"]`
	
* `aventuras.recursos.npc.on_rightclick(self, clicker)` : Coordena o chamada 'on_rightclick' no NPC
	* São os mesmo argumentos da chamada 'on_rightclick'

* `aventuras.recursos.npc.registrar_arte(nome, Definições de arte de NPC)` : Registra dados de arte do npc
	* `nome` é o nome da entidade-NPC (exemplo: "mobs_npc:igor")

### Definições de arte de NPC
	{
		face = "default_dirt.png",
		^ Imagem da face do NPC para as formspecs de apresentação (recomenda-se largura e altura iguais)
		bgcolor = "bgcolor[#080808BB;true]",
		^ Valor RGB-Hexadecimal da cor de fundo para as formspecs de apresentação
		bg_img1x1 = "background[5,5;1,1;gui_formbg.png;true]",
		^ Imagem de fundo para as formspecs no formato quadrado
		bg_img10x3 = "background[5,5;1,1;gui_formbg.png;true]",
		^ Imagem de fundo para as formspecs no formato 10x3
		sounds = Sons de NPC,
		^ Opcional. Tabela de sons do NPC
	}

### Sons de NPC
	{
		concluir = {name="aventuras_concluir",gain=1.0},
		^ Nome do arquivo de audio de quando o jogador conclui uma tarefa no NPC
	}

Termos reservados
-----------------
Todos os nomes de tipos de tarefas são reservados


Banco de Dados
--------------
O banco de dados funciona com o sseguintes valores:

* `aventura_<nome de aventura>`
* `tarefa_<nome do tipo de tarefa>`

Midias padrão
-------------
Você pode usar essas mídias alternativamente. Elas já estão presentes na Engine.

### Texturas
aventuras_tarefa_duvida.png

### Sons
aventuras_concluir.ogg


